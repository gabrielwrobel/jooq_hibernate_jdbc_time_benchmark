/*
 * This file is generated by jOOQ.
 */
package cont.jooqcont.model.tables;


import cont.jooqcont.model.Compdb;
import cont.jooqcont.model.Indexes;
import cont.jooqcont.model.Keys;
import cont.jooqcont.model.tables.records.DataModelRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataModel extends TableImpl<DataModelRecord> {

    private static final long serialVersionUID = -149113420;

    /**
     * The reference instance of <code>compdb.data_model</code>
     */
    public static final DataModel DATA_MODEL = new DataModel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataModelRecord> getRecordType() {
        return DataModelRecord.class;
    }

    /**
     * The column <code>compdb.data_model.id</code>.
     */
    public final TableField<DataModelRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>compdb.data_model.s_value2</code>.
     */
    public final TableField<DataModelRecord, String> S_VALUE2 = createField("s_value2", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>compdb.data_model.s_value3</code>.
     */
    public final TableField<DataModelRecord, String> S_VALUE3 = createField("s_value3", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>compdb.data_model.s_value4</code>.
     */
    public final TableField<DataModelRecord, String> S_VALUE4 = createField("s_value4", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>compdb.data_model.s_value5</code>.
     */
    public final TableField<DataModelRecord, String> S_VALUE5 = createField("s_value5", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>compdb.data_model.s_value6</code>.
     */
    public final TableField<DataModelRecord, String> S_VALUE6 = createField("s_value6", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>compdb.data_model.s_value7</code>.
     */
    public final TableField<DataModelRecord, String> S_VALUE7 = createField("s_value7", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>compdb.data_model.tag</code>.
     */
    public final TableField<DataModelRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>compdb.data_model</code> table reference
     */
    public DataModel() {
        this(DSL.name("data_model"), null);
    }

    /**
     * Create an aliased <code>compdb.data_model</code> table reference
     */
    public DataModel(String alias) {
        this(DSL.name(alias), DATA_MODEL);
    }

    /**
     * Create an aliased <code>compdb.data_model</code> table reference
     */
    public DataModel(Name alias) {
        this(alias, DATA_MODEL);
    }

    private DataModel(Name alias, Table<DataModelRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataModel(Name alias, Table<DataModelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DataModel(Table<O> child, ForeignKey<O, DataModelRecord> key) {
        super(child, key, DATA_MODEL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Compdb.COMPDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DATA_MODEL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DataModelRecord, Long> getIdentity() {
        return Keys.IDENTITY_DATA_MODEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DataModelRecord> getPrimaryKey() {
        return Keys.KEY_DATA_MODEL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DataModelRecord>> getKeys() {
        return Arrays.<UniqueKey<DataModelRecord>>asList(Keys.KEY_DATA_MODEL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataModel as(String alias) {
        return new DataModel(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataModel as(Name alias) {
        return new DataModel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataModel rename(String name) {
        return new DataModel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DataModel rename(Name name) {
        return new DataModel(name, null);
    }
}
